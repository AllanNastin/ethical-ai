# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_CCQgWBu0oliQ02SXPYyd02UR-zRvtyB
"""

import json
from google.colab import files

labelStudioOutput = files.upload()

for filename, content in labelStudioOutput.items():

    json_string = content.decode('utf-8')
    data = json.loads(json_string)
    print("file loaded")

    for item in data:
      print(item)



output_file = 'DocRed_format_of_labelStudio.json'
variable = []
title = "title: \"Legal text about AI\"\n"
variable.append(title)
with open(output_file, 'w') as outfile:


  DocRED_format = []

  for item in data:

      title = "Legal text about AI"
      sentences = [item['data']['text'].split()]

      #THe formatting for docRED
      vertex_set = []
      for annotation in item['annotations']:
          for result in annotation['result']:
              if 'value' in result and 'labels' in result['value']:
                  for label in result['value']['labels']:
                      vertex = {
                          "pos": [result['value']['start'], result['value']['end']],
                          "type": label,
                          "sent_id": 0,
                          "name": result['value']['text']
                      }
                      vertex_set.append(vertex)

      labels = []
      for annotation in item['annotations']:
          for result in annotation['result']:
              if 'value' in result and 'labels' in result['value']:
                  for label in result['value']['labels']:
                      label_info = {
                          "r": "P1",  #Not sure how to get the actual relation from a third file
                          "h": 0,
                          "t": 2,
                          "evidence": [0]
                      }
                      labels.append(label_info)

      # Construct the transformed item
      transformed_item = {
          "title": title,
          "sents": sentences,
          "vertexSet": vertex_set,
          "labels": labels
      }

      DocRED_format.append(transformed_item)


print(DocRED_format)

with open(output_file, 'w') as outfile:
    json.dump(DocRED_format, outfile, indent=4)

content